<!DOCTYPE HTML>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="viewport" content="width=device-width">
		<meta http-equiv="X-UA-Compatible" content="IE=EmulateIE9" >
        <title>Web App Dev : Timeplanner</title>
        <link rel="stylesheet" type="text/css" href="styles.css" />
        <link rel="stylesheet" type="text/css" href="responsiveStyles.css" />
        <script type="text/javascript" src="jquery-1.7.1.min.js"></script>
        <script type="text/javascript" src="jquery.blockUI.js"></script>
        <script type="text/javascript" src="jquery.cookie.js"></script>
        <script type="text/javascript" src="addDays.js"></script>
        <script type="text/javascript">
            // TODO
            // add year to database so that next and previous can go into other years

			// THESE TWO THINGS MAY CHANGE IF MOODLE MUCKS WITH IT
			// regular expression to pluck out user specific url to get iCal file from moodle site
			var iCalURLRegExp = /\"\S*export_execute.php\S*\"/gi;
			// url to page in moodle where user specific iCal url is located
			var iCalMoodlePage = "https://mbds.net172.ca/calendar/view.php?view=month";

            // xmlHttpRequest object for carrying out AJAX
            var xmlhttp;
			// array of event data pulled from ICS file from moodle
			var eventData;
            // day adjustment for next/previous navigation links
            var adjustment;
            // the type of student to build the calendar for (default = IT AD Web students)
            var studentType;
			// arrays for converting data to full names
			var months = new Array("January","February","March","April","May","June","July","August","September","October","November","December");
			var weekdays = new Array("Sun", "Mon", "Tues", "Weds", "Thurs", "Fri", "Sat");
            // grab current date from system clock
            var dateCurrent = new Date();
			// date object counter for building calendar
            var dateCounter;

            // ------------------------------------------------------- private methods
            function buildCalendar() {
				var dueMonth;
				var dueDay;
				var out = "";
				var august = false;
				var july = false;

                // clear out calendar for work to be done to it
				$("#contentPane").html("");
                // close any panes that might be open
				closeAll();

				// build calendar for a two week span
                // grab current date
				dateCounter = new Date();
                // add/subtract days for next/previous navigation to setup dateCounter to be on correct day to start from
				if (adjustment != 0) dateCounter = dateCounter.addDays(adjustment);

				for (var n = 0; n < 15; n++) {
					// check if we have august or july added to the calendar yet (disable previous or next)
				    if (dateCounter.getMonth() == 6) july = true;
				    else if (dateCounter.getMonth() == 7) august = true;

				    // pull out proper month and day data from date object
                    dueMonth = dateCounter.getMonth() + 1;
                    //dueMonth = dateCounter.getMonth();
				    dueDay = dateCounter.getDate();

                    // drop week divider line if the day is a sunday
				    if ((dateCounter.getDay() == 0) && (n != 0)) {
				        out += "<div class='weekDivider'></div>";
				    }
				    // begin constructing output HTML string for day
				    if ((dateCounter.getDate() == 1) || (n == 0)) {
				        // add name of month
				        out += "<div class='monthPane'>";
				        out += "<span class='month'>" + months[dueMonth - 1] + " </span>";
				        if (n == 0) {
				            out += "<span style='float:right;margin-top:7px'>";
				            out += "<a href='#' id='lnkPrevious' onclick='onPrevious();'>Previous</a><span id='lnkPreviousDead' style='display:none;color:#444444'>Previous</span> <span style='color:#666666;'>|</span> <a href='#' id='lnkNext' onclick='onNext();'>Next</a><span id='lnkNextDead' style='display:none;color:#444444'>Next</span>";
				            out += "</span>";
				        }
				        out += "</div>";
				    }
				    out += "<div id='day" + n + "' class='dayPane'>";
				    out += "<div class='date'>" + dateCounter.getDate() + " " + weekdays[dateCounter.getDay()];
				    if (dateCounter.toDateString() == dateCurrent.toDateString()) out += " : Today"
				    out += "</div>";

					// find all events for the current day / month
					for (var p=0; p<eventData.length; p++) {
						if ((eventData[p].month == dueMonth) && (eventData[p].day == dueDay)) {
							// process this event into the HTML
							out = generateDeadlineHTML(out, eventData[p]);
						}
					}
					out += "</div>";

					// add a day to the date object
					dateCounter = dateCounter.addDays(1);
                }

                // drop output into contentPane
				$("#contentPane").html(out);

                // setup rollover for btnClose button for both detailsPane and helpPane
				$("img.btnClose").hover(
                    function () {
                        this.src = this.src.replace("_off", "_on");
                    },
                    function () {
                        this.src = this.src.replace("_on", "_off");
                    }
                );

                // disabling next and previous links for beginning and end of school year
                if (july) $("#lnkNext,#lnkNextDead").toggle();
                else if (august) $("#lnkPrevious,#lnkPreviousDead").toggle();
            }

            function generateDeadlineHTML(out, source) {
                out += "<div class='deadlinePane'>" +
                       "<img src='it1Color.png' alt='Deadline' class='icons' />" +
                       "<a href='#' id='lnk" + source.id + "' onclick='onDetails(" + source.id + ");return false;' class='it1Color'>" + source.name + "</a>" +
                       "</div>";
                out += "<div id='details" + source.id + "' class='detailsPane'>" +
                       "<img class='btnClose' src='btnType1Close_off.png' alt='Close Details Pane' onclick='onClose();' style='float:right' />" +
                       "<b>" + source.name + "</b><br/>" +
                       "<b>Due on: </b>" + months[source.month - 1] + " " + source.day + " at " + source.time + "<br/>" +
                       "<b>Course: </b>" + source.category + "<br/>";
                out += "<b>Description:</b><br/>" + source.description + "<br/>" +
                       "</div>";
                return out;
            }

            // ------------------------------------------------------- event handlers
            function onDetails(targetID) {
                if ($("#details" + targetID).css("display") == "none") {
                    // close all panes if any opened
                    closeAll();
                    // make detailsPane visible
                    $("#details" + targetID).slideDown();
                }
            }

            function onHelp() {
                if ($("#helpPane").css("display") == "none") {
                    // close all panes if any opened
                    closeAll();
                    // make pane visible
                    $("#helpPane").slideDown();
                }
            }

            function closeAll() {
                // close all open panes
                $(".detailsPane").css("display", "none");
                $("#helpPane").css("display", "none");
            }

            function onClose() {
                // close both panes (both close buttons call this method)
                $("#helpPane").slideUp();
                $(".detailsPane").slideUp();
            }

            function onNext() {
                // adjusting how many days after current day
                adjustment += 15;
                buildCalendar();
            }

            function onPrevious() {
                // adjusting how many days before current day
                adjustment -= 15;
                buildCalendar();
            }

			function onReload() {
				// clear out cookie
				$.cookie("iCalURL", null, { expires:365 });
				// reload app
				onSetup();
			}

			function onLoadedData() {
				if ((xmlhttp.readyState == 4) && (xmlhttp.status == 200)) {

					// grab ICS string from response
					var icsString = xmlhttp.responseText;
					//console.log("BEFORE: " + icsString);

					// cleaning ICS string
					// removing carriage returns at the end of multiline fields (description)
					icsString = icsString.replace(/\r\n\t\s/g,"");
					// replacing commas \t, tabs, and semicolons
					icsString = icsString.replace(/\\,/g, ",");
					icsString = icsString.replace(/\\t/g, " ");
					icsString = icsString.replace(/\\;/g, ";");
					icsString = icsString.replace(/\\>/g, "&gt;");
					icsString = icsString.replace(/\\</g, "&lt;");

					//console.log("AFTER: " + icsString);

					// construct data structure
					eventData = [];

					// grab all event strings from ics file and store in array
					var events = icsString.match(/BEGIN\:VEVENT([\s\S]*?)END\:VEVENT/g);
					// only parse/clean iCal file if it contains data
					if (events != null) {
						for (var n=0; n<events.length; n++){

							var names = events[n].match(/SUMMARY\:(.*\r\n)/);
							var descriptions = events[n].match(/DESCRIPTION\:(.*\r\n)/);
							var categories = events[n].match(/CATEGORIES\:(.*\r\n)/);
							var dueDates = events[n].match(/DTSTART\:(.*\r\n)/);

							var tempy = {};
							tempy.id = n;
							tempy.name = names[0].replace(/SUMMARY\:/,"");
							if (categories === null) tempy.category = "Personal Event";
							else tempy.category = categories[0].replace(/CATEGORIES\:/,"");

							// clean description rogue characters <br/>
							var description = descriptions[0];
							description = description.replace(/\\n/g, "<br/>");
							description = description.replace(/\r\n/g, "");
							description = description.replace(/DESCRIPTION\:/,"");
							if (description == "") description = "None provided";
							tempy.description = description;

							// extract date from ICS format
							var dueDate = dueDates[0].replace(/DTSTART\:/,"");
							var year = dueDate.substr(0,4);
							var month = dueDate.substr(4,2) - 1;
							var day = dueDate.substr(6,2);
							var hours = dueDate.substr(9,2);
							var minutes = dueDate.substr(11,2);
							// iCal is storing the moodle event time as if we are in Greenwich, UK (UTC time)- we need to convert it back to local time
							var d = new Date(Date.UTC(year,month,day,hours,minutes,0,0));
							// update with converted date
							tempy.year = d.getFullYear();
							tempy.month = d.getMonth() + 1;
							tempy.day = d.getDate();
							// formatting time string
							var time = "";
							if (d.getHours() < 10) time = "0" + d.getHours();
							else time = d.getHours();
							if (d.getMinutes() < 10) time += ":0" + d.getMinutes();
							else time += ":" + d.getMinutes();
							tempy.time = time;

							// add data object to array
							eventData.push(tempy);
						}
					}

					// day adjustment is initialized - want to view two week span starting with today
                    adjustment = 0;

                    // build the calendar
                    buildCalendar();

					// fade out loading overlay
                    $("#loadingOverlay").delay(300).fadeOut(300);
				}
			}

            function onLoadedHTML() {
                // has the response been received successfully?
                if ((xmlhttp.readyState == 4) && (xmlhttp.status == 200)) {
					// grab HTML returned from response to find out URL to get ics file (for user authentication)
					var returnedHTML = xmlhttp.responseText;
					// pluck out url with regexp
					var iCalURL = returnedHTML.match(iCalURLRegExp);
					// slice off the quotes around url
					iCalURL = iCalURL[0].slice(1,iCalURL[0].length - 1);
					iCalURL = iCalURL.replace(/&amp;/g,"&");
					iCalURL = iCalURL + "&preset_time=custom";
					//console.log("url: " + iCalURL);

					// save user's url to get iCal file in cookie
					$.cookie("iCalURL", iCalURL, { expires:365 });

					// prepare second request to get actual ics file (text) using URL scrapped from HTML
					xmlhttp.onreadystatechange = onLoadedData;
					xmlhttp.open("POST",iCalURL, true);
					xmlhttp.send();
                }
            }

            function onSetup() {
                // disabling the entire RIA using loading overlay
                $("#loadingOverlay").show();
				try {
					// send out request to retrieve XML
					if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari
						xmlhttp = new XMLHttpRequest();
					} else { // code for IE6, IE5
						xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
					}

					// check if cookie of personal iCal URL is saved in a cookie
                    //alert("test: " + $.cookie("iCalURL"));
                    if ($.cookie("iCalURL") != null) {
						// cookie found
                        iCalURL = $.cookie("iCalURL");
						// jump right to getting the actual ics file (text)
						xmlhttp.onreadystatechange = onLoadedData;
						xmlhttp.open("POST",iCalURL, true);
						xmlhttp.send();
                    } else {
                        // not found - we have to request the page in moodle and scrap the HTML to find the URL
						xmlhttp.onreadystatechange = onLoadedHTML;
						xmlhttp.open("POST",iCalMoodlePage, true);
						xmlhttp.send();
                    }
				} catch(e) {
					// not required - moodle server will redirect the request to the moodle login screen
				}
            }

            $(document).ready(function () {
                // preload loading images
                var myImage1 = new Image();
                myImage1.onload = onSetup;
                myImage1.src = "loading.gif";
				var myImage2 = new Image();
				myImage2.src = "btnClose_off.png";
				var myImage3 = new Image();
				myImage3.src = "btnType1Close_off.png";
            });

        </script>
    </head>
    <body>
        <div id="main">
            <div id="instructions">
                <img src="title.png" alt="Student Timeplanner" />
                <br /><br />
                <div style="float:right;">
                    Click the list of links on the right to view details for the corresponding deadline. Navigate to other biweekly periods with the next and previous links. The timeplanner remembers the last person logged into moodle who accessed the timeplanner. If the deadlines are not your own (which is possible on public machines) click the link below.<br /><br />
                    <div style="text-align:right;">
                        <a href="#" id="lnkReload" onclick="onReload();">Reload the Timeplanner</a><br />
                    </div>
                    <br />
                    <a href='#' onclick='onHelp();'>Help</a>
                </div>
            </div>
            <div id="calendarPane">
                <div id="compressedInstructions">
                    <img src="titleHorizontal.png" alt="Student Timeplanner" />
                    <br /><br />
                    Click the list of links on the right to view details for the corresponding deadline. Navigate to other biweekly periods with the next and previous links. The timeplanner remembers the last person logged into moodle who accessed the timeplanner. If the deadlines are not your own (which is possible on public machines) click the link below.<br /><br />
                    <div style="text-align:left;">
                        <a href="#" id="lnkReload" onclick="onReload();">Reload the Timeplanner</a><br />
                    </div>
                    <br />
                    <a href='#' onclick='onHelp();'>Help</a>
                </div>
                <div id="helpPane">
                    <img class="btnClose" src="btnClose_off.png" alt="Close Help Pane" onclick="onClose();" style="float:right" />
                    <div class="month" style="padding-bottom:5px;">Timeplanner : Help</div>
                    The IT / Game Development industry is heavily deadline based and naturally our programs at the NSCC are no different. The trick is to manage your time effectively in order to complete all the projects on time! Procrastination is something we all do, but don't let it get the better of you. This timeplanner was developed to help you achieve the goal of better time management.
                    <br /><br />
                    Your greatest resource is your time.
                    <br /><br />
                    <b>What's a deadline?</b><br />
                    If you look at the calendar you will notice that some days contain green links.  This is a deadline. Click on any of these deadlines to get a detailed view of the due date, description, etc.
                </div>
                <div id="contentPane"></div>
            </div>
        </div>

		<div id="loadingOverlay">
			<div style="width:300px;height:20px;position:absolute;margin-left:10%;margin-top:10%;"><img src="loading.gif" style="text-align:center;margin-right:5px;" alt="Loading" /> Loading Data - Please wait... :)</div>
		</div>

    </body>
</html>
